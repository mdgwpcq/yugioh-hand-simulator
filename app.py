import streamlit as st
import random
import numpy as np

st.set_page_config(page_title="щБКцИпчОЛ хжихо│уВлуГ╝уГЙхЖЕши│уВ╕уВзуГНуГмуГ╝уВ┐уГ╝", layout="centered")
st.title("ЁЯГП хжихо│уВлуГ╝уГЙхЖЕши│уВ╕уВзуГНуГмуГ╝уВ┐уГ╝")

st.header("тСа хжихо│уВлуГ╝уГЙуБошинхоЪ")
num_cards = st.number_input("хжихо│уВлуГ╝уГЙуБочиощбЮцХ░ (p)", min_value=1, max_value=30, value=4)

induced_cards = []
total_h = 0

for i in range(num_cards):
    cols = st.columns([2, 1])
    with cols[0]:
        name = st.text_input(f"уВлуГ╝уГЙ{i+1}уБохРНхЙН", key=f"name_{i}")
    with cols[1]:
        count = st.number_input("цОбчФицЮЪцХ░", min_value=0, max_value=3, value=1, step=1, key=f"count_{i}")
    if name:
        induced_cards.append((name, count))
        total_h += count

st.divider()

st.header("тСб уГЗуГГуВнуБошинхоЪ")
col_deck_label, col_deck_input = st.columns([2, 1])
with col_deck_label:
    st.markdown("#### чЫ╕цЙЛуБоуГЗуГГуВнцЮЪцХ░")
with col_deck_input:
    deck_size = st.number_input("", min_value=40, max_value=60, value=40, step=1)

non_induced_count = deck_size - total_h

non_induced = deck_size - total_h
st.markdown(f"тЬЕ хжихо│уВлуГ╝уГЙуБохРИшиИцЮЪцХ░ (h): **{total_h}** цЮЪ")
st.markdown(f"ЁЯУж хжихо│ф╗ехдЦуБоуВлуГ╝уГЙцЮЪцХ░: **{non_induced}** цЮЪ")

st.divider()

st.header("тСв цЙЛцЬнуБохжихо│уВлуГ╝уГЙцЮЪцХ░уБощБ╕цКЮ")
mode = st.radio("уГвуГ╝уГЙщБ╕цКЮ", ["цЙЛхЛХуБзщБ╕цКЮ", "уГйуГ│уГАуГауБзщБ╕цКЮя╝ИхИЖх╕ГуБлхЯ║уБеуБПя╝Й"])

if mode == "цЙЛхЛХуБзщБ╕цКЮ":
    q = st.number_input("цЙЛцЬнуБлхРлуБ╛уВМуВЛхжихо│уВлуГ╝уГЙцЮЪцХ░ (q)", min_value=0, max_value=5, value=1, step=1)
else:
    mu = total_h / deck_size * 5
    sigma = 0.8  # хИЖх╕ГуБох║ГуБМуВКшк┐цХ┤я╝Их┐ЕшжБуБлх┐ЬуБШуБжхдЙцЫ┤я╝Й
    q = int(np.clip(np.random.normal(loc=mu, scale=sigma), 0, 5))
    st.markdown(f"ЁЯО▓ уГйуГ│уГАуГащБ╕цКЮч╡РцЮЬ: **{q}цЮЪ** уБохжихо│уВлуГ╝уГЙуБМцЙЛцЬнуБлхРлуБ╛уВМуБ╛уБЩ")

st.divider()

if st.button("ЁЯОп хжихо│уВлуГ╝уГЙуВТчв║шкНя╝Б"):
    card_pool = []
    for name, count in induced_cards:
        card_pool.extend([name] * count)

    if q > len(card_pool):
        st.error("цМЗхоЪуБХуВМуБЯцЮЪцХ░уБохжихо│уВлуГ╝уГЙуВТуГЗуГГуВнуБЛуВЙх╝ХуБПуБУуБиуБМуБзуБНуБ╛уБЫуВУуАВ")
    else:
        drawn = random.sample(card_pool, q)
        st.success(f"цЙЛцЬнуБохжихо│уВлуГ╝уГЙхЖЕши│я╝И{q}цЮЪф╕ня╝Й:")
        st.write("уГ╗" + "\nуГ╗".join(drawn))
